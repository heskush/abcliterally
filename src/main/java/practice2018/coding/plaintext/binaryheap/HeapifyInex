import java.util.Comparator;

public static void heapifyIndex(int i , int[] arr, Comparator comparator){
    //Check whether it is a leaf node
    int size=arr.length;
    if(size/2 - 1  <=i ){
        return;
    }
    //Not a leaf Node.
    int leftChildIndex=2*i +1;
    int rightChildIndex=2*i+2;
    int leftChildVal=arr[leftChildIndex];
    int rightChildVal=arr[rightChildIndex];
    int parentVal=arr[i];
    int maxIndex=i;
    if(comparator.compare(leftChildVal,parentVal)>0){
        maxIndex=leftChildIndex;
        arr[leftChildIndex]=parentVal;
        arr[i]=leftChildVal;
    }
    else if(comparator.compare(rightChildVal,parentVal)>0){
        maxIndex=rightChildIndex;
        arr[rightChildIndex]=parentVal;
        arr[i]=rightChildVal;
    }
    if(maxIndex != i){
        heapifyIndex(maxIndex,arr);
    }

}
